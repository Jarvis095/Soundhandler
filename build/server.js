"use strict";var p=Object.defineProperty;var v=(n,t,i)=>t in n?p(n,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[t]=i;var o=(n,t)=>p(n,"name",{value:t,configurable:!0});var l=(n,t,i)=>v(n,typeof t!="symbol"?t+"":t,i);function m(n,t,i){return[n,t,i]}o(m,"Vector3");var d=class d{identifier;options;isPlaying=!1;startTime=0;source="";playersInRange=[];activeFilters=[];resDistance=3;volume=1;loop=!1;constructor(t,i,e={}){this.identifier=t,this.source=i,this.options=e,this.NotifyPlayers("CreateSound",t,i,this.getOptionJSON())}NotifyPlayers(t,...i){for(let e of this.playersInRange)TriggerClientEvent(`Sounity:${t}`,e,this.identifier,...i)}Attach(t){this.options.attachTo=t,this.NotifyPlayers("AttachSound",t)}ChangeVolume(t){this.volume=t,this.NotifyPlayers("ChangeVolume",t)}ChangeRefDistance(t){this.resDistance=t,this.NotifyPlayers("ChangeRefDistance",t)}ChangeLoop(t){this.loop=t,this.NotifyPlayers("ChangeLoop",t)}Detach(){delete this.options.attachTo,this.NotifyPlayers("DetachSound")}Start(){this.startTime=GetGameTimer(),this.isPlaying=!0,this.NotifyPlayers("StartSound",this.startTime,this.resDistance,this.volume,this.loop)}Move(t,i,e){this.options.posX=t,this.options.posY=i,this.options.posZ=e,this.Detach(),this.NotifyPlayers("MoveSound",t,i,e)}Rotate(t,i,e){this.options.rotX=t,this.options.rotY=i,this.options.rotZ=e,this.Detach(),this.NotifyPlayers("RotateSound",t,i,e)}Dispose(){this.NotifyPlayers("DisposeSound")}Stop(){this.isPlaying=!1,this.NotifyPlayers("StopSound")}getOptionJSON(){return JSON.stringify(this.options)}PlayerInRange(t){this.playersInRange.push(t),TriggerClientEvent("Sounity:CreateSound",t,this.identifier,this.source,this.getOptionJSON()),this.activeFilters.length>0&&TriggerClientEvent("Sounity:AddFilters",t,this.identifier,JSON.stringify(this.activeFilters)),this.isPlaying&&TriggerClientEvent("Sounity:StartSound",t,this.identifier,this.startTime,this.resDistance,this.volume,this.loop)}PlayerOutOfRange(t){this.playersInRange=this.playersInRange.filter(i=>i!==t),TriggerClientEvent("Sounity:DisposeSound",t,this.identifier)}isAttached(){return this.options.hasOwnProperty("attachTo")}GetAttachTo(){return this.isAttached()?this.options.attachTo:0}getPosition(){let t=this.GetAttachTo();if(t!==0)return GetEntityCoords(NetworkGetEntityFromNetworkId(t));let i=this.options.posX||0,e=this.options.posY||0,s=this.options.posZ||0;return m(i,e,s)}getIdentifer(){return this.identifier}AddFilter(t){if(this.activeFilters.includes(t))throw new Error(`A filter with the name '${t}' is already active in this sound instance!`);this.activeFilters.push(t),this.NotifyPlayers("AddFilter",t)}RemoveFilter(t){if(!this.activeFilters.includes(t))throw new Error(`A filter with the name '${t}' is not active in this sound instance!`);this.activeFilters=this.activeFilters.filter(i=>i!==t),this.NotifyPlayers("RemoveFilter",t)}};o(d,"SounitySound");var a=d;var g=o((n,t)=>Math.hypot(n[0]-t[0],n[1]-t[1],n[2]-t[2]),"distanceBetween");var r=class r{MAX_RANGE=new Map;identifierPrefix="server";sounds={};constructor(){exports("AddListenerFilter",this.AddListenerFilter.bind(this)),exports("RemoveListenerFilter",this.RemoveListenerFilter.bind(this)),exports("CreateSound",this.CreateSound.bind(this)),exports("StartSound",this.StartSound.bind(this)),exports("MoveSound",this.MoveSound.bind(this)),exports("RotateSound",this.RotateSound.bind(this)),exports("StopSound",this.StopSound.bind(this)),exports("DisposeSound",this.DisposeSound.bind(this)),exports("AttachSound",this.AttachSound.bind(this)),exports("DetachSound",this.DetachSound.bind(this)),exports("AddSoundFilter",this.AddSoundFilter.bind(this)),exports("RemoveSoundFilter",this.RemoveSoundFilter.bind(this)),exports("ChangeVolume",this.ChangeVolume.bind(this)),exports("ChangeRefDistance",this.ChangeRefDistance.bind(this)),exports("ChangeLoop",this.ChangeLoop.bind(this))}AddListenerFilter(t,i){TriggerClientEvent("Sounity:AddListenerFilter",t,i)}RemoveListenerFilter(t,i){TriggerClientEvent("Sounity:RemoveListenerFilter",t,i)}Tick(){for(let t of Object.values(this.sounds))for(let i of getPlayers()){let e=GetPlayerPed(i);if(e===0)continue;let s=g(GetEntityCoords(e),t.getPosition());s<=(this.MAX_RANGE.get(t.identifier)||10)&&!t.playersInRange.includes(i)?t.PlayerInRange(i):s>(this.MAX_RANGE.get(t.identifier)||10)&&t.playersInRange.includes(i)&&t.PlayerOutOfRange(i)}}getSoundInstance(t){if(!this.sounds[t])throw new Error(`Unknown identifier '${t}'`);return this.sounds[t]}CreateSound(t,i="{}"){let e=JSON.parse(i),s=`${this.identifierPrefix}${r.idCounter++}`,b=new a(s,t,e);return this.MAX_RANGE.set(s,e.maxRange||10),this.sounds[s]=b,s}StartSound(t){this.getSoundInstance(t).Start()}ChangeVolume(t,i){this.getSoundInstance(t).ChangeVolume(i)}ChangeRefDistance(t,i){this.getSoundInstance(t).ChangeRefDistance(i)}ChangeLoop(t,i){this.getSoundInstance(t).ChangeLoop(i)}MoveSound(t,i,e,s){this.getSoundInstance(t).Move(i,e,s)}RotateSound(t,i,e,s){this.getSoundInstance(t).Rotate(i,e,s)}StopSound(t){this.getSoundInstance(t).Stop()}DisposeSound(t){this.sounds[t]&&(this.getSoundInstance(t).Dispose(),delete this.sounds[t])}AttachSound(t,i){this.getSoundInstance(t).Attach(i)}DetachSound(t){this.getSoundInstance(t).Detach()}AddSoundFilter(t,i){this.getSoundInstance(t).AddFilter(i)}RemoveSoundFilter(t,i){this.getSoundInstance(t).RemoveFilter(i)}};o(r,"SounityServerAPI"),l(r,"idCounter",1);var u=r;var c=class c{sounityServerAPI;debug=-1;tick=0;constructor(){this.sounityServerAPI=new u,this.tick=setTick(()=>this.OnTick())}async OnTick(){this.sounityServerAPI.Tick(),TriggerClientEvent("Sounity:ServerTime",-1,GetGameTimer())}};o(c,"SounityServer");var h=c;var w=JSON.parse(LoadResourceFile(GetCurrentResourceName(),"config.json"));setImmediate(()=>{new h});
//# sourceMappingURL=data:application/json;base64,
